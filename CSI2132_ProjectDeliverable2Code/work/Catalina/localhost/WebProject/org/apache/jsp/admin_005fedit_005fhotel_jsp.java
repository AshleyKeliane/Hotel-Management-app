/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.19
 * Generated at: 2024-03-30 02:13:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.*;
import com.demo.AdminService;
import javax.servlet.http.*;

public final class admin_005fedit_005fhotel_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(5);
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(1);
    _jspx_imports_classes.add("com.demo.AdminService");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Admin</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"MainStyle.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<nav>\r\n");
      out.write("    <ul>\r\n");
      out.write("        <li><a href=\"index.jsp\">Home</a></li>\r\n");
      out.write("        <li><a href=\"login.jsp\">Login</a></li>\r\n");
      out.write("        <li><a href=\"customer_search.jsp\">Search Rooms</a></li>\r\n");
      out.write("        <li><a href=\"about.jsp\">About Us</a></li>\r\n");
      out.write("    </ul>\r\n");
      out.write("</nav>\r\n");

    try {
        if ("POST".equalsIgnoreCase(request.getMethod())) {
            int objectid = Integer.parseInt(request.getParameter("objectid"));
            int roomnumber = Integer.parseInt(request.getParameter("roomnumber"));
            int chainid = Integer.parseInt(request.getParameter("chainid"));
            int star = Integer.parseInt(request.getParameter("stars"));
            String address = request.getParameter("address");
            String email = request.getParameter("email");
            String manager = request.getParameter("manager");
            String phone = request.getParameter("phone");

            if (star <= 0 || star > 5) {
                throw new IllegalArgumentException("");
            }

            AdminService service = new AdminService();
            boolean worked = service.updateHotel(objectid, roomnumber, chainid, address, email, star, manager, phone);
            if (worked) {
                response.sendRedirect("admin_success.jsp");
            } else {
                response.sendRedirect("admin_error.jsp");
            }
        }
    } catch (NumberFormatException e) {
        response.sendRedirect("admin_error3.jsp");
    } catch (IllegalArgumentException e){
        response.sendRedirect("admin_error3.jsp");
    } catch (Exception e) {
        e.printStackTrace();
        response.sendRedirect("admin_error.jsp");
    }

      out.write("\r\n");
      out.write("\r\n");
      out.write("<form method=\"post\" class=\"login-form\">\r\n");
      out.write("    <div class=\"form-group\">\r\n");
      out.write("        <label for=\"roomnumber\">Number of rooms:</label>\r\n");
      out.write("        <input type=\"text\" id=\"roomnumber\" name=\"roomnumber\" required>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"form-group\">\r\n");
      out.write("        <label for=\"chainid\">Chain ID:</label>\r\n");
      out.write("        <input type=\"text\" id=\"chainid\" name=\"chainid\" required>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"form-group\">\r\n");
      out.write("        <label for=\"manager\">Manager Name:</label>\r\n");
      out.write("        <input type=\"text\" id=\"manager\" name=\"manager\" required>\r\n");
      out.write("    </div>\r\n");
      out.write("     <div class=\"form-group\">\r\n");
      out.write("        <label for=\"address\">Address:</label>\r\n");
      out.write("        <input type=\"text\" id=\"address\" name=\"address\" required>\r\n");
      out.write("     </div>\r\n");
      out.write("     <div class=\"form-group\">\r\n");
      out.write("        <label for=\"stars\">Star:</label>\r\n");
      out.write("        <input type=\"text\" id=\"stars\" name=\"stars\" required>\r\n");
      out.write("     </div>\r\n");
      out.write("      <div class=\"form-group\">\r\n");
      out.write("         <label for=\"email\">Email:</label>\r\n");
      out.write("         <input type=\"text\" id=\"email\" name=\"email\" required>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"form-group\">\r\n");
      out.write("          <label for=\"phone\">Phone:</label>\r\n");
      out.write("          <input type=\"text\" id=\"phone\" name=\"phone\" required>\r\n");
      out.write("      </div>\r\n");
      out.write("    <button type=\"submit\">Edit Hotel</button>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<form action=\"admin_view_hotel.jsp\" method=\"get\" class=\"signup-button\">\r\n");
      out.write("    <button type=\"submit\">Go Back</button>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
