/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.19
 * Generated at: 2024-03-30 01:52:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.demo.AdminService;
import com.demo.Hotel;
import java.util.List;
import java.util.ArrayList;
import java.util.Date;

public final class admin_005fview_005fhotel_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(5);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("com.demo.AdminService");
    _jspx_imports_classes.add("com.demo.Hotel");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Admin</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"MainStyle.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<nav>\r\n");
      out.write("    <ul>\r\n");
      out.write("        <li><a href=\"index.jsp\">Home</a></li>\r\n");
      out.write("        <li><a href=\"login.jsp\">Login</a></li>\r\n");
      out.write("        <li><a href=\"customer_search.jsp\">Search Rooms</a></li>\r\n");
      out.write("        <li><a href=\"about.jsp\">About Us</a></li>\r\n");
      out.write("    </ul>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");

     if (session.getAttribute("type").equals("customer")) {
        response.sendRedirect("customer.jsp");
     } else if (session.getAttribute("type").equals("employee")){
        response.sendRedirect("employee.jsp");
     } else if (session.getAttribute("type").equals("admin")){

     } else {
         response.sendRedirect("index.jsp");
     }


 
      out.write("\r\n");
      out.write("\r\n");
      out.write(" ");

     AdminService service = new AdminService();
     ArrayList<Hotel> listy = null;

     try {
         listy = service.hotelList();
     } catch (Exception e) {
         e.printStackTrace();
         response.sendRedirect("admin_error2.jsp");
     }
 
      out.write("\r\n");
      out.write("\r\n");
      out.write(" <h2>All Hotels</h2>\r\n");
      out.write(" <div>\r\n");
      out.write("     ");

         if (listy != null && !listy.isEmpty()) {
             for (Hotel thing : listy) {
     
      out.write("\r\n");
      out.write("     <div class=\"room-container\">\r\n");
      out.write("         <ul class=\"room-info\">\r\n");
      out.write("             <li><span>Hotel ID: </span> ");
      out.print( thing.getHotelID() );
      out.write("</li>\r\n");
      out.write("             <li><span>Chain ID: </span> ");
      out.print( thing.getChainID() );
      out.write("</li>\r\n");
      out.write("             <li><span>Manager Name: </span> ");
      out.print( thing.getManagerName() );
      out.write("</li>\r\n");
      out.write("             <li><span>Number of Room: </span> ");
      out.print( thing.getRoomNumber() );
      out.write("</li>\r\n");
      out.write("             <li><span>Address: </span> ");
      out.print( thing.getAddress() );
      out.write("</li>\r\n");
      out.write("             <li><span>Star: </span> ");
      out.print( thing.getStar() );
      out.write("</li>\r\n");
      out.write("             <li><span>Email: </span> ");
      out.print( thing.getEmail() );
      out.write("</li>\r\n");
      out.write("             <li><span>Phone: </span> ");
      out.print( thing.getPhone() );
      out.write("</li>\r\n");
      out.write("         </ul>\r\n");
      out.write("         <a href=\"admin_edit_hotel.jsp?objectid=");
      out.print( thing.getHotelID() );
      out.write("\" class=\"book-button\">Edit</a>\r\n");
      out.write("         <a href=\"admin_delete_hotel.jsp?objectid=");
      out.print( thing.getHotelID() );
      out.write("\" class=\"book-button\">Delete</a>\r\n");
      out.write("     </div>\r\n");
      out.write("     ");

             }
         } else {
             out.println("<p>No hotels found.</p>");
         }
     
      out.write("\r\n");
      out.write(" </div>\r\n");
      out.write("\r\n");
      out.write(" <div class=\"button-container1\">\r\n");
      out.write("     <form action=\"admin.jsp\">\r\n");
      out.write("         <button type=\"submit\" class=\"button1\">Go back</button>\r\n");
      out.write("     </form>\r\n");
      out.write("     <form action=\"admin_insert_hotel.jsp\">\r\n");
      out.write("          <button type=\"submit\" class=\"button1\">Create hotel</button>\r\n");
      out.write("     </form>\r\n");
      out.write(" </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  </body>\r\n");
      out.write("  </html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
